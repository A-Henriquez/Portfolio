2024/11/13 15:44:13 [testMake] Testing Makefile exists and can compile mts, 1.00
2024/11/13 15:44:13 [COMMAND]: /usr/bin/make -C submissions/ahenriquez/p2 clean
2024/11/13 15:44:13 make: Entering directory '/home/clarkzjw/CSC360/marking/p2/marking/submissions/ahenriquez/p2'
rm -f *.o
rm -f mts
make: Leaving directory '/home/clarkzjw/CSC360/marking/p2/marking/submissions/ahenriquez/p2'
2024/11/13 15:44:13 [COMMAND]: /usr/bin/make -C submissions/ahenriquez/p2
2024/11/13 15:44:13 make: Entering directory '/home/clarkzjw/CSC360/marking/p2/marking/submissions/ahenriquez/p2'
gcc mts.c -Wall -g -lreadline -lhistory -ltermcap -lpthread -o mts
make: Leaving directory '/home/clarkzjw/CSC360/marking/p2/marking/submissions/ahenriquez/p2'
2024/11/13 15:44:13 ==== Test name: testMake, Mark received: 1.00 ====

2024/11/13 15:44:14 [testREADME] Testing README file exists, 1.00
2024/11/13 15:44:14 [testREADME] README content: 
Train Crossing Simulation
Overview
This project simulates a train crossing system using multithreading in C. It manages multiple trains, each with its own loading and crossing times, and a dispatcher that ensures trains cross the track in an orderly manner based on priority. The program reads train data from a file, processes the trains using threads, and outputs the results to a file.

Features
Multithreading: Each train operates in its own thread, allowing concurrent loading and crossing.
Dispatcher: A dispatcher thread manages the order of trains crossing based on priority and direction.
Priority Handling: Trains are prioritized based on their defined properties, ensuring a fair crossing system.
Output Logging: All events are logged to an output file for analysis.

Estimated Execution Time
The estimated execution time for the provided test input.txt is approximately 4.2 seconds.

Code Structure
train struct: Represents a train with attributes such as ID, loading time, crossing time, direction, and priority.
TrainQueue struct: Manages the queue of trains waiting to cross.
Timer struct: Used to track elapsed time during the simulation.
Thread Functions: trainthreadFunction handles train operations, while dispatcher_function manages crossing logic.
Utility Functions: Functions for initializing structures, adding trains to the queue, handling synchronization, and formatting time.
Concurrency Control
Mutexes: Protect shared resources (track_mutex and queue_mutex) to prevent race conditions.
Condition Variables: Used to signal events between threads, such as when a train is ready to load or has finished crossing.
2024/11/13 15:44:14 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/11/13 15:44:26 mark received: y
2024/11/13 15:44:26 ==== Test name: testREADME, Mark received: 1.00 ====

2024/11/13 15:44:27 [testExecMTS] Testing your mts can be executed with one command line parameter, i.e., input.txt, 2.00
2024/11/13 15:44:27 [testExecMTS] Testing self-provided input case
2024/11/13 15:44:27 input.txt: 
e 10 6
W 6 7
E 3 10
w 5 5
E 4 8
w 7 3

2024/11/13 15:44:27 [COMMAND]: ./mts input.txt
2024/11/13 15:44:31 
2024/11/13 15:44:31 [testExecMTS] exec mts succeed and output.txt found
2024/11/13 15:44:31 [testExecMTS] output.txt content: 
00:00:00.3 Train  2 is ready to go East
00:00:00.3 Train  2 is ON the main track going East
00:00:00.4 Train  4 is ready to go East
00:00:00.5 Train  3 is ready to go West
00:00:00.6 Train  1 is ready to go West
00:00:00.7 Train  5 is ready to go West
00:00:01.0 Train  0 is ready to go East
00:00:01.3 Train  2 is OFF the main track after going East
00:00:01.3 Train  4 is ON the main track going East
00:00:02.1 Train  4 is OFF the main track after going East
00:00:02.1 Train  1 is ON the main track going West
00:00:02.8 Train  1 is OFF the main track after going West
00:00:02.8 Train  3 is ON the main track going West
00:00:03.3 Train  3 is OFF the main track after going West
00:00:03.3 Train  5 is ON the main track going West
00:00:03.6 Train  5 is OFF the main track after going West
00:00:03.6 Train  0 is ON the main track going East
00:00:04.2 Train  0 is OFF the main track after going East
2024/11/13 15:44:31 Do you want to award mark for this test? (y/n or input a floating number between [0, 2.00]): 
2024/11/13 15:44:35 mark received: y
2024/11/13 15:44:35 ==== Test name: testExecMTS, Mark received: 2.00 ====

2024/11/13 15:44:36 [testExecMTSMultiple] Testing your mts with five different input cases, 2 mark each, 10.00
2024/11/13 15:44:36 

[testExecMTSMultiple] Testing input case 1
2024/11/13 15:44:36 input.txt: 
e 10 6
W 6 7
E 3 10
2024/11/13 15:44:36 [COMMAND]: ./mts ../../../tests/test1/input.txt
2024/11/13 15:44:38 
2024/11/13 15:44:38 [testExecMTSMultiple] exec mts succeed and output.txt found
2024/11/13 15:44:38 [testExecMTSMultiple] output.txt content match
2024/11/13 15:44:38 output.txt: 
00:00:00.3 Train  2 is ready to go East
00:00:00.3 Train  2 is ON the main track going East
00:00:00.6 Train  1 is ready to go West
00:00:01.0 Train  0 is ready to go East
00:00:01.3 Train  2 is OFF the main track after going East
00:00:01.3 Train  1 is ON the main track going West
00:00:02.0 Train  1 is OFF the main track after going West
00:00:02.0 Train  0 is ON the main track going East
00:00:02.6 Train  0 is OFF the main track after going East
2024/11/13 15:44:39 

[testExecMTSMultiple] Testing input case 2
2024/11/13 15:44:39 input.txt: 
w 1 3
W 2 1
E 3 1
2024/11/13 15:44:39 [COMMAND]: ./mts ../../../tests/test2/input.txt
2024/11/13 15:44:40 
2024/11/13 15:44:40 [testExecMTSMultiple] exec mts succeed and output.txt found
2024/11/13 15:44:40 [testExecMTSMultiple] output.txt content not match
2024/11/13 15:44:40 Expected output: 
00:00:00.1 Train  0 is ready to go West
00:00:00.1 Train  0 is ON the main track going West
00:00:00.2 Train  1 is ready to go West
00:00:00.3 Train  2 is ready to go East
00:00:00.4 Train  0 is OFF the main track after going West
00:00:00.4 Train  2 is ON the main track going East
00:00:00.5 Train  2 is OFF the main track after going East
00:00:00.5 Train  1 is ON the main track going West
00:00:00.6 Train  1 is OFF the main track after going West
2024/11/13 15:44:40 Actual output: 
00:00:00.1 Train  0 is ready to go West
00:00:00.1 Train  0 is ON the main track going West
00:00:00.2 Train  1 is ready to go West
00:00:00.3 Train  2 is ready to go East
00:00:00.4 Train  0 is OFF the main track after going West
00:00:00.4 Train  1 is ON the main track going West
00:00:00.5 Train  1 is OFF the main track after going West
00:00:00.5 Train  2 is ON the main track going East
00:00:00.6 Train  2 is OFF the main track after going East
2024/11/13 15:44:40 Do you want to award mark for this test? (y/n or input a floating number between [0, 2.00]): 
2024/11/13 15:46:00 mark received: 1
2024/11/13 15:46:01 

[testExecMTSMultiple] Testing input case 3
2024/11/13 15:46:01 input.txt: 
w 1 3
e 2 1
E 3 1
2024/11/13 15:46:01 [COMMAND]: ./mts ../../../tests/test3/input.txt
2024/11/13 15:46:01 
2024/11/13 15:46:01 [testExecMTSMultiple] exec mts succeed and output.txt found
2024/11/13 15:46:01 [testExecMTSMultiple] output.txt content match
2024/11/13 15:46:01 output.txt: 
00:00:00.1 Train  0 is ready to go West
00:00:00.1 Train  0 is ON the main track going West
00:00:00.2 Train  1 is ready to go East
00:00:00.3 Train  2 is ready to go East
00:00:00.4 Train  0 is OFF the main track after going West
00:00:00.4 Train  2 is ON the main track going East
00:00:00.5 Train  2 is OFF the main track after going East
00:00:00.5 Train  1 is ON the main track going East
00:00:00.6 Train  1 is OFF the main track after going East
2024/11/13 15:46:02 

[testExecMTSMultiple] Testing input case 4
2024/11/13 15:46:02 input.txt: 
w 1 2
W 2 2
w 4 3
W 6 1
e 7 1

2024/11/13 15:46:02 [COMMAND]: ./mts ../../../tests/test4/input.txt
2024/11/13 15:46:03 
2024/11/13 15:46:03 [testExecMTSMultiple] exec mts succeed and output.txt found
2024/11/13 15:46:03 [testExecMTSMultiple] output.txt content not match
2024/11/13 15:46:03 Expected output: 
00:00:00.1 Train  0 is ready to go West
00:00:00.1 Train  0 is ON the main track going West
00:00:00.2 Train  1 is ready to go West
00:00:00.3 Train  0 is OFF the main track after going West
00:00:00.3 Train  1 is ON the main track going West
00:00:00.4 Train  2 is ready to go West
00:00:00.5 Train  1 is OFF the main track after going West
00:00:00.5 Train  2 is ON the main track going West
00:00:00.6 Train  3 is ready to go West
00:00:00.7 Train  4 is ready to go East
00:00:00.8 Train  2 is OFF the main track after going West
00:00:00.8 Train  4 is ON the main track going East
00:00:00.9 Train  4 is OFF the main track after going East
00:00:00.9 Train  3 is ON the main track going West
00:00:01.0 Train  3 is OFF the main track after going West

2024/11/13 15:46:03 Actual output: 
00:00:00.1 Train  0 is ready to go West
00:00:00.1 Train  0 is ON the main track going West
00:00:00.2 Train  1 is ready to go West
00:00:00.3 Train  0 is OFF the main track after going West
00:00:00.3 Train  1 is ON the main track going West
00:00:00.4 Train  2 is ready to go West
00:00:00.5 Train  1 is OFF the main track after going West
00:00:00.5 Train  2 is ON the main track going West
00:00:00.6 Train  3 is ready to go West
00:00:00.7 Train  4 is ready to go East
00:00:00.8 Train  2 is OFF the main track after going West
00:00:00.8 Train  3 is ON the main track going West
00:00:00.9 Train  3 is OFF the main track after going West
00:00:00.9 Train  4 is ON the main track going East
00:00:01.0 Train  4 is OFF the main track after going East
2024/11/13 15:46:03 Do you want to award mark for this test? (y/n or input a floating number between [0, 2.00]): 
2024/11/13 15:46:10 mark received: 1
2024/11/13 15:46:11 

[testExecMTSMultiple] Testing input case 5
2024/11/13 15:46:11 input.txt: 
e 1 1
E 3 2
w 6 2
W 9 4
e 14 1
E 16 1
w 17 1
W 19 1
e 21 1
e 23 5
w 29 1
w 30 1
e 32 1
e 34 1
w 36 1
w 38 1
e 43 1
e 45 2
w 48 5
W 54 1
W 56 13
e 51 12
2024/11/13 15:46:11 [COMMAND]: ./mts ../../../tests/test5/input.txt
2024/11/13 15:46:19 
2024/11/13 15:46:19 [testExecMTSMultiple] exec mts succeed and output.txt found
2024/11/13 15:46:19 [testExecMTSMultiple] output.txt content match
2024/11/13 15:46:19 output.txt: 
00:00:00.1 Train  0 is ready to go East
00:00:00.1 Train  0 is ON the main track going East
00:00:00.2 Train  0 is OFF the main track after going East
00:00:00.3 Train  1 is ready to go East
00:00:00.3 Train  1 is ON the main track going East
00:00:00.5 Train  1 is OFF the main track after going East
00:00:00.6 Train  2 is ready to go West
00:00:00.6 Train  2 is ON the main track going West
00:00:00.8 Train  2 is OFF the main track after going West
00:00:00.9 Train  3 is ready to go West
00:00:00.9 Train  3 is ON the main track going West
00:00:01.3 Train  3 is OFF the main track after going West
00:00:01.4 Train  4 is ready to go East
00:00:01.4 Train  4 is ON the main track going East
00:00:01.5 Train  4 is OFF the main track after going East
00:00:01.6 Train  5 is ready to go East
00:00:01.6 Train  5 is ON the main track going East
00:00:01.7 Train  6 is ready to go West
00:00:01.7 Train  5 is OFF the main track after going East
00:00:01.7 Train  6 is ON the main track going West
00:00:01.8 Train  6 is OFF the main track after going West
00:00:01.9 Train  7 is ready to go West
00:00:01.9 Train  7 is ON the main track going West
00:00:02.0 Train  7 is OFF the main track after going West
00:00:02.1 Train  8 is ready to go East
00:00:02.1 Train  8 is ON the main track going East
00:00:02.2 Train  8 is OFF the main track after going East
00:00:02.3 Train  9 is ready to go East
00:00:02.3 Train  9 is ON the main track going East
00:00:02.8 Train  9 is OFF the main track after going East
00:00:02.9 Train 10 is ready to go West
00:00:02.9 Train 10 is ON the main track going West
00:00:03.0 Train 11 is ready to go West
00:00:03.0 Train 10 is OFF the main track after going West
00:00:03.0 Train 11 is ON the main track going West
00:00:03.1 Train 11 is OFF the main track after going West
00:00:03.2 Train 12 is ready to go East
00:00:03.2 Train 12 is ON the main track going East
00:00:03.3 Train 12 is OFF the main track after going East
00:00:03.4 Train 13 is ready to go East
00:00:03.4 Train 13 is ON the main track going East
00:00:03.5 Train 13 is OFF the main track after going East
00:00:03.6 Train 14 is ready to go West
00:00:03.6 Train 14 is ON the main track going West
00:00:03.7 Train 14 is OFF the main track after going West
00:00:03.8 Train 15 is ready to go West
00:00:03.8 Train 15 is ON the main track going West
00:00:03.9 Train 15 is OFF the main track after going West
00:00:04.3 Train 16 is ready to go East
00:00:04.3 Train 16 is ON the main track going East
00:00:04.4 Train 16 is OFF the main track after going East
00:00:04.5 Train 17 is ready to go East
00:00:04.5 Train 17 is ON the main track going East
00:00:04.7 Train 17 is OFF the main track after going East
00:00:04.8 Train 18 is ready to go West
00:00:04.8 Train 18 is ON the main track going West
00:00:05.1 Train 21 is ready to go East
00:00:05.3 Train 18 is OFF the main track after going West
00:00:05.3 Train 21 is ON the main track going East
00:00:05.4 Train 19 is ready to go West
00:00:05.6 Train 20 is ready to go West
00:00:06.5 Train 21 is OFF the main track after going East
00:00:06.5 Train 19 is ON the main track going West
00:00:06.6 Train 19 is OFF the main track after going West
00:00:06.6 Train 20 is ON the main track going West
00:00:07.9 Train 20 is OFF the main track after going West
2024/11/13 15:46:20 No deadlock happened, all tests finished within 1 minute, awarding 1.0 marks
2024/11/13 15:46:20 ==== Test name: testExecMTSMultiple, Mark received: 7.00 ====

2024/11/13 15:46:21 
==== Final Grade: 11.000000==== (+2 partial marks, final: 13.0)
