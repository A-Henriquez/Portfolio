2024/12/09 14:20:35 [testREADME] Testing README file exists, 0.50
2024/12/09 14:20:35 [testREADME] README content: 

Programming A3

Overview

This project is a tool for managing a disk image that implements a custom file system. The code allows users to inspect, list, retrieve, and insert files into the disk image. The program operates on a custom disk structure that includes superblock information, FAT (File Allocation Table), and directory entries. The disk image can be opened, analyzed, and manipulated with a variety of functions provided by the tool.

Key Features

Inspect Disk Image: View basic information about the disk structure (superblock, FAT, and root directory).
List Directory Contents: List files and directories in a given path within the disk image.
Retrieve Files: Retrieve a file from the disk image and save it locally.
Insert Files: Insert new files into the disk image and update the relevant FAT and directory entries.

Functions

diskinfo

This function processes the disk image, retrieves superblock information, and classifies FAT entries (free, reserved, or allocated blocks). It then displays this information to the user.

display_disk_info

This function displays the superblock and FAT information, such as block size, block count, and the status of the FAT blocks (free, reserved, or allocated).

disklist

This function lists the contents of a directory in the disk image. The directory path is specified as a command-line argument. It handles both files and directories and displays their metadata (e.g., file size, modification time, etc.).


diskget

This function allows the user to retrieve a file from the disk image. It locates the file by traversing the directory structure and then writes the file contents to a local file.

diskput

This function inserts a new file into the disk image. It writes the contents of a local file into the image, updating the FAT and directory entries as necessary.


2024/12/09 14:20:35 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:20:37 mark received: y
2024/12/09 14:20:37 ==== Test name: testREADME, Mark received: (0.50/0.50) , Total: 0.50====

2024/12/09 14:20:38 [testMake] Testing Makefile exists and can compile, 0.50
2024/12/09 14:20:38 [COMMAND]: /usr/bin/make -C submissions/ahenriquez/p3 clean
2024/12/09 14:20:38 make: Entering directory '/home/clarkzjw/CSC360/marking/p3/marking/submissions/ahenriquez/p3'
rm -f diskinfo.o disklist.o diskput.o diskget.o
rm -f diskinfo disklist diskput diskget
make: Leaving directory '/home/clarkzjw/CSC360/marking/p3/marking/submissions/ahenriquez/p3'
2024/12/09 14:20:38 [COMMAND]: /usr/bin/make -C submissions/ahenriquez/p3
2024/12/09 14:20:38 make: Entering directory '/home/clarkzjw/CSC360/marking/p3/marking/submissions/ahenriquez/p3'
gcc -Wall -g -c diskinfo.c -o diskinfo.o
gcc diskinfo.o -o diskinfo
gcc -Wall -g -c disklist.c -o disklist.o
gcc disklist.o -o disklist
gcc -Wall -g -c diskput.c -o diskput.o
gcc diskput.o -o diskput
gcc -Wall -g -c diskget.c -o diskget.o
gcc diskget.o -o diskget
make: Leaving directory '/home/clarkzjw/CSC360/marking/p3/marking/submissions/ahenriquez/p3'
2024/12/09 14:20:38 ==== Test name: testMake, Mark received: (0.50/0.50) , Total: 1.00====

2024/12/09 14:20:39 [testDiskinfoOutputFormat] Testing the output of diskinfo follows the expected format, 1.00
2024/12/09 14:20:39 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:20:40 
2024/12/09 14:20:40 [testDiskinfoOutputFormat] diskinfo expected output: 
Super block information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory start: 51
Root directory blocks: 8

FAT information:
Free Blocks: 6341
Reserved Blocks: 49
Allocated Blocks: 10

2024/12/09 14:20:40 [testDiskinfoOutputFormat] diskinfo actual output:
2024/12/09 14:20:40 [COMMAND]: ./diskinfo test-1.img
2024/12/09 14:20:40 
Superblock Information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory starts: 51
Root directory blocks: 8

FAT Information:
Free Blocks: 6341
Reserved Blocks: 49
Allocated Blocks: 10
2024/12/09 14:20:40 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:20:41 mark received: y
2024/12/09 14:20:41 ==== Test name: testDiskinfoOutputFormat, Mark received: (1.00/1.00) , Total: 2.00====

2024/12/09 14:20:42 [testDiskinfoOutputCorrectness] Testing the output of diskinfo is correct, 1.00
2024/12/09 14:20:42 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:20:42 
2024/12/09 14:20:42 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img ./reference
2024/12/09 14:20:42 
2024/12/09 14:20:42 [testDiskinfoOutputCorrectness]-1, expected output:
2024/12/09 14:20:42 [COMMAND]: ./diskinfo test-1.img
2024/12/09 14:20:42 
Super block information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory start: 51
Root directory blocks: 8

FAT information:
Free Blocks: 6341
Reserved Blocks: 49
Allocated Blocks: 10
2024/12/09 14:20:42 [testDiskinfoOutputCorrectness]-1, actual output:
2024/12/09 14:20:42 [COMMAND]: ./diskinfo test-1.img
2024/12/09 14:20:42 
Superblock Information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory starts: 51
Root directory blocks: 8

FAT Information:
Free Blocks: 6341
Reserved Blocks: 49
Allocated Blocks: 10
2024/12/09 14:20:42 [testDiskinfoOutputCorrectness] diskinfo output not match
2024/12/09 14:20:42 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:20:44 mark received: y
2024/12/09 14:20:44 [testDiskinfoOutputCorrectness]-2, expected output:
2024/12/09 14:20:44 [COMMAND]: ./diskinfo test-2.img
2024/12/09 14:20:44 
Super block information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory start: 51
Root directory blocks: 8

FAT information:
Free Blocks: 6181
Reserved Blocks: 49
Allocated Blocks: 170
2024/12/09 14:20:44 [testDiskinfoOutputCorrectness]-2, actual output:
2024/12/09 14:20:44 [COMMAND]: ./diskinfo test-2.img
2024/12/09 14:20:44 
Superblock Information:
Block size: 512
Block count: 6400
FAT starts: 1
FAT blocks: 50
Root directory starts: 51
Root directory blocks: 8

FAT Information:
Free Blocks: 6181
Reserved Blocks: 49
Allocated Blocks: 170
2024/12/09 14:20:44 [testDiskinfoOutputCorrectness] diskinfo output not match
2024/12/09 14:20:44 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:20:45 mark received: y
2024/12/09 14:20:45 ==== Test name: testDiskinfoOutputCorrectness, Mark received: (1.00/1.00) , Total: 3.00====

2024/12/09 14:20:46 [testDisklistOutputFormat] Testing the output of disklist follows the expected format, 1.00
2024/12/09 14:20:46 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:20:46 
2024/12/09 14:20:46 [testDisklistOutputFormat] disklist expected output: 
D          0                              . 2024-11-20 19:57:09
D          0                        sub_Dir 2024-11-20 19:57:20
F         16                       test.txt 2024-11-20 19:57:37
F      31128                        cat.jpg 2024-11-20 19:57:54

2024/12/09 14:20:46 [COMMAND]: ./disklist test-2.img /
2024/12/09 14:20:46 
F         16                       test.txt 2024/11/20 19:57:37
F      31128                        cat.jpg 2024/11/20 19:57:54
2024/12/09 14:20:46 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:20:49 mark received: y
2024/12/09 14:20:49 ==== Test name: testDisklistOutputFormat, Mark received: (1.00/1.00) , Total: 4.00====

2024/12/09 14:20:50 [testDisklistOutputCorrectness] Testing the output of disklist is correct, 3.00
2024/12/09 14:20:50 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:20:50 
2024/12/09 14:20:50 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img ./reference
2024/12/09 14:20:50 
2024/12/09 14:20:50 [testDisklistOutputCorrectness]-1, expected output:
2024/12/09 14:20:50 [COMMAND]: ./disklist test-2.img /
2024/12/09 14:20:50 
D          0                              . 2024/11/20 19:57:09
D          0                        sub_Dir 2024/11/20 19:57:20
F         16                       test.txt 2024/11/20 19:57:37
F      31128                        cat.jpg 2024/11/20 19:57:54
2024/12/09 14:20:50 [testDisklistOutputCorrectness]-1, actual output:
2024/12/09 14:20:50 [COMMAND]: ./disklist test-2.img /
2024/12/09 14:20:50 
F         16                       test.txt 2024/11/20 19:57:37
F      31128                        cat.jpg 2024/11/20 19:57:54
2024/12/09 14:20:50 [testDisklistOutputCorrectness] disklist output not match
2024/12/09 14:20:50 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:20:55 mark received: 0.5
2024/12/09 14:20:55 [testDisklistOutputCorrectness]-2, expected output:
2024/12/09 14:20:55 [COMMAND]: ./disklist test-2.img /sub_Dir
2024/12/09 14:20:55 
F      45535                        201.jpg 2024/11/20 19:55:11
F         16                       test.txt 2024/11/20 19:57:37
2024/12/09 14:20:55 [testDisklistOutputCorrectness]-2, actual output:
2024/12/09 14:20:55 [COMMAND]: ./disklist test-2.img /sub_Dir
2024/12/09 14:20:55 
F      45535                        201.jpg 2024/11/20 19:55:11
F         16                       test.txt 2024/11/20 19:57:37
2024/12/09 14:20:55 [testDisklistOutputCorrectness] disklist output match, received mark: 1.00
2024/12/09 14:20:55 [testDisklistOutputCorrectness]-3, expected output:
2024/12/09 14:20:55 [COMMAND]: ./disklist test-2.img /non_exist
2024/12/09 14:20:55 
2024/12/09 14:20:55 [testDisklistOutputCorrectness]-3, actual output:
2024/12/09 14:20:55 [COMMAND]: ./disklist test-2.img /non_exist
2024/12/09 14:20:55 
2024/12/09 14:20:55 [testDisklistOutputCorrectness] disklist output not match
2024/12/09 14:20:55 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:21:00 mark received: y
2024/12/09 14:21:00 ==== Test name: testDisklistOutputCorrectness, Mark received: (2.50/3.00) , Total: 6.50====

2024/12/09 14:21:01 [testDiskgetFileNotFound] Testing diskget outputs File not found when the requested file does not exist, 0.50
2024/12/09 14:21:01 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:01 
2024/12/09 14:21:01 [COMMAND]: ./diskget test-2.img /not_exist not_exist.copy
2024/12/09 14:21:01 
File not found.
2024/12/09 14:21:01 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:21:04 mark received: y
2024/12/09 14:21:04 ==== Test name: testDiskgetFileNotFound, Mark received: (0.50/0.50) , Total: 7.00====

2024/12/09 14:21:05 [testDiskget] Testing diskget can copy the requested file to host, 2.00
2024/12/09 14:21:05 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:05 
2024/12/09 14:21:05 [testDiskget]-1, diskget test.txt
2024/12/09 14:21:05 [COMMAND]: ./diskget test-2.img /test.txt test.txt.copy
2024/12/09 14:21:05 
2024/12/09 14:21:05 [COMMAND]: ./diskget test-2.img test.txt test.txt.copy
2024/12/09 14:21:05 
2024/12/09 14:21:05 File test.txt.copy exists
2024/12/09 14:21:05 [testDiskget]-2, diskget sub_Dir/test.txt
2024/12/09 14:21:05 [COMMAND]: ./diskget test-2.img /sub_Dir/test.txt sub_Dir.test.txt.copy
2024/12/09 14:21:05 
File not found.
2024/12/09 14:21:05 [COMMAND]: ./diskget test-2.img sub_Dir/test.txt sub_Dir.test.txt.copy
2024/12/09 14:21:05 
File not found.
2024/12/09 14:21:05 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:21:23 mark received: n
2024/12/09 14:21:23 ==== Test name: testDiskget, Mark received: (1.00/2.00) , Total: 8.00====

2024/12/09 14:21:24 [testDiskgetFileSame] Testing diskget can copy the requested file to host and the file is the same as expected, 1.50
2024/12/09 14:21:25 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:25 
2024/12/09 14:21:25 [testDiskgetFileSame]-1, diskget cat.jpg
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img /cat.jpg cat.jpg.copy
2024/12/09 14:21:25 
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img cat.jpg cat.jpg.copy
2024/12/09 14:21:25 
2024/12/09 14:21:25 [testDiskgetFileSame]-1, diskget succeed, sha1sum same: 1ab45bddca25936cd5563b65e9276bee27f5a48f
2024/12/09 14:21:25 [testDiskgetFileSame]-2, diskget test.txt
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img /test.txt test.txt.copy
2024/12/09 14:21:25 
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img test.txt test.txt.copy
2024/12/09 14:21:25 
2024/12/09 14:21:25 [testDiskgetFileSame]-2, diskget succeed, sha1sum same: dd9d29a308dc940a9c75f26532debb5e4bf6d6e9
2024/12/09 14:21:25 [testDiskgetFileSame]-3, diskget sub_Dir/201.jpg
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img /sub_Dir/201.jpg 201.jpg.copy
2024/12/09 14:21:25 
File not found.
2024/12/09 14:21:25 [COMMAND]: ./diskget test-2.img sub_Dir/201.jpg 201.jpg.copy
2024/12/09 14:21:25 
File not found.
2024/12/09 14:21:25 201.jpg.copy not found
2024/12/09 14:21:25 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:21:34 mark received: n
2024/12/09 14:21:34 ==== Test name: testDiskgetFileSame, Mark received: (1.00/1.50) , Total: 9.00====

2024/12/09 14:21:35 [testDiskputFileNotFound] Testing diskput outputs File not found when the requested file does not exist on host, 0.50
2024/12/09 14:21:35 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:35 
2024/12/09 14:21:35 [COMMAND]: ./diskput test-2.img diskput_not_exist /diskput_not_exist
2024/12/09 14:21:35 
File not found.
2024/12/09 14:21:35 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:21:37 mark received: y
2024/12/09 14:21:37 ==== Test name: testDiskputFileNotFound, Mark received: (0.50/0.50) , Total: 9.50====

2024/12/09 14:21:38 [testDiskputAndList] Testing diskput can copy the requested file to the image and verify by disklist, 3.00
2024/12/09 14:21:38 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:38 
2024/12/09 14:21:38 [testDiskputAndList]-1, diskput Makefile to /diskputTarget
2024/12/09 14:21:38 [COMMAND]: ./diskput test-2.img Makefile /diskputTarget
2024/12/09 14:21:38 
2024/12/09 14:21:38 
2024/12/09 14:21:38 [COMMAND]: ./disklist test-2.img /
2024/12/09 14:21:38 
F         16                       test.txt 2024/11/20 19:57:37
F      31128                        cat.jpg 2024/11/20 19:57:54
F  941633847                  diskputTarget    0/00/00 00:00:00
F  941633847                  diskputTarget    0/00/00 00:00:00
2024/12/09 14:21:38 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:21:43 mark received: 0.5
2024/12/09 14:21:43 [COMMAND]: ./diskget test-2.img /diskputTarget diskputTarget.copy2
2024/12/09 14:21:43 
File not found.
2024/12/09 14:21:43 [COMMAND]: ./diskget test-2.img diskputTarget diskputTarget.copy2
2024/12/09 14:21:43 
File not found.
2024/12/09 14:21:43 diskputTarget.copy2 not found
2024/12/09 14:21:43 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:21:45 mark received: n
2024/12/09 14:21:45 [testDiskputAndList]-2, diskput Makefile to /sub_Dir/diskputTarget
2024/12/09 14:21:45 [COMMAND]: ./diskput test-2.img Makefile /sub_Dir/diskputTarget
2024/12/09 14:21:45 
2024/12/09 14:21:45 
2024/12/09 14:21:45 [COMMAND]: ./disklist test-2.img /sub_Dir
2024/12/09 14:21:45 
F      45535                        201.jpg 2024/11/20 19:55:11
F         16                       test.txt 2024/11/20 19:57:37
2024/12/09 14:21:45 Do you want to award mark for this test? (y/n or input a floating number between [0, 1.00]): 
2024/12/09 14:21:49 mark received: n
2024/12/09 14:21:49 ==== Test name: testDiskputAndList, Mark received: (0.50/3.00) , Total: 10.00====

2024/12/09 14:21:50 [testDiskputCreateDir] Testing diskput can create the directory in test image when the target file path directory does not exist, 0.50
2024/12/09 14:21:50 [COMMAND]: /usr/bin/bash -c cp test_images/test-1.img test_images/test-2.img submissions/ahenriquez/p3
2024/12/09 14:21:50 
2024/12/09 14:21:50 [testDiskputCreateDir], diskput Makefile
2024/12/09 14:21:50 [COMMAND]: ./diskput test-2.img Makefile /Dir2/diskputTarget
2024/12/09 14:21:50 
2024/12/09 14:21:50 [COMMAND]: ./disklist test-2.img /Dir2
2024/12/09 14:21:50 
2024/12/09 14:21:50 Do you want to award mark for this test? (y/n or input a floating number between [0, 0.50]): 
2024/12/09 14:21:54 mark received: n
2024/12/09 14:21:54 ==== Test name: testDiskputCreateDir, Mark received: (0.00/0.50) , Total: 10.00====

2024/12/09 14:21:55 
==== Final Grade: 10.000000====
